# This AWS SAM template has been generated from your function's configuration. If
# your function has one or more triggers, note that the AWS resources associated
# with these triggers aren't fully specified in this template and include
# placeholder values. Open this template in AWS Infrastructure Composer or your
# favorite IDE and modify it to specify a serverless application with other AWS
# resources.
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application that lets you talk to your database in natural language.
Resources:
  PyMySQLLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: PyMySQLLayer
      Description: PyMySQL shared layer
      ContentUri: layers/pymysql-layer
      CompatibleRuntimes:
        - python3.13
      RetentionPolicy: Retain
  getSQLTableInfo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/getSQLTableInfo
      Layers:
        - !Ref PyMySQLLayer
      Description: 'This would let you get an SQL Query based on the natural language question'
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.13
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      Environment:
        Variables:
          DB_HOST: talk-to-db-poc.cxqua08ywknm.ap-south-1.rds.amazonaws.com
          DB_NAME: tshirt_store
          DB_PASSWORD: root123!
          DB_PORT: '3306'
          DB_USER: root
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:ap-south-1:025066239748:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:ap-south-1:025066239748:log-group:/aws/lambda/getSQLTableInfo:*
      RecursiveLoop: Terminate
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  executeSQLQuery:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/executeSQLQuery
      Description: 'This would let you execute your SQL Queries'
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Layers:
        - !Ref PyMySQLLayer
      Runtime: python3.13
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      Environment:
        Variables:
          DB_HOST: talk-to-db-poc.cxqua08ywknm.ap-south-1.rds.amazonaws.com
          DB_NAME: tshirt_store
          DB_PASSWORD: root123!
          DB_PORT: '3306'
          DB_USER: root
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:ap-south-1:025066239748:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:ap-south-1:025066239748:log-group:/aws/lambda/executeSQLQuery:*
      RecursiveLoop: Terminate
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
